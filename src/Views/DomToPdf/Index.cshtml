@{
    ViewBag.Title = "knockout JavaScript framework (MVC/MVVM)";
}
@{string imgTag = "<img>";}

<h3>People</h3>
<div id='wanted'>
    <ul id='wanted' data-bind="foreach: people">
        <li>
            Name at position <span data-bind="text: $index"> </span>:
            <span data-bind="text: name"> </span>
            <a href="#" data-bind="click: $parent.removePerson">Remove</a>
        </li>
    </ul>
    <h3>Visible in HTML, but Broken in Converted PDF</h3>
    <div>Relative local @imgTag: <img src='./../content/images/kuujinbo_320-30.gif' /></div>
    <div><a href='./WebForms/HtmlImageHandler.aspx'>Relative local hyperlink</a></div>
</div>

<div class='margin-tb4'>
    <button class='btn btn-primary' data-bind="click: addPerson">Add</button>
    <button class='btn btn-success' data-bind="click: getPdf">Get PDF</button>
</div>

@*
    binary ajax support has been avaialble for over four years:
    https://bugs.jquery.com/ticket/11461
*@
@section scripts
{
    <script src="~/Scripts/libs/knockout-3.4.0.js"></script>
    @*https://github.com/eligrey/FileSaver.js*@
    <script src="~/Scripts/ajax/FileSaver.js"></script>
    @*https://github.com/henrya/js-jquery/tree/master/BinaryTransport*@
    <script src="~/Scripts/ajax/jquery.binarytransport.js"></script>
    <script src="~/Scripts/ajax/jquery-binary.js"></script>
    <script type="text/javascript">
        function AppViewModel() {
            var self = this;
            self.getPdf = function (data, event) {
                var closedImg = $('#wanted').prop('outerHTML')
                    .replace(/(<img[^>]+)(?=[^/])>/, '$1 />');
                $(this).downloadFile(
                    '@Url.Action("Index", "DomToPdf")',
                    { xHtml: closedImg }
                );
            }

            self.people = ko.observableArray([
                { name: 'Bert' },
                { name: 'Charles' },
                { name: 'Denise' }
            ]);
            self.addPerson = function () {
                self.people.push({ name: "New at " + new Date() });
            };
            self.removePerson = function () {
                self.people.remove(this);
            }
        }
        ko.applyBindings(new AppViewModel());
    </script>
}